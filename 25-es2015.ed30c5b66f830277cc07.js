(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{"3zMC":function(e,t,a){"use strict";a.r(t),a.d(t,"PagerDemoModule",function(){return Q});var n=a("3Pt+"),c=a("ofXK"),b=a("8MG2"),r=a("N+3j"),i=a("fXoL"),l=a("0G9f"),o=a("6Y1o"),d=a("vAyd");function s(e,t){if(1&e&&(i.Qb(0,"div",28),i.Qb(1,"div",29),i.Bc(2),i.Pb(),i.Qb(3,"div",30),i.Qb(4,"div",31),i.Bc(5," This is an example card. "),i.Pb(),i.Pb(),i.Pb()),2&e){const e=t.$implicit;i.zb(2),i.Dc(" ",e," ")}}function g(e,t){if(1&e&&(i.Qb(0,"div",32),i.Qb(1,"div",33),i.Qb(2,"div",28),i.Qb(3,"div",29),i.Bc(4),i.Pb(),i.Qb(5,"div",30),i.Qb(6,"div",31),i.Bc(7," This is an example card. "),i.Pb(),i.Pb(),i.Pb(),i.Pb(),i.Pb()),2&e){const e=t.$implicit;i.zb(4),i.Dc(" ",e," ")}}function P(e,t){if(1&e&&(i.Qb(0,"div",34),i.Qb(1,"div",28),i.Qb(2,"div",29),i.Bc(3),i.Pb(),i.Qb(4,"div",30),i.Qb(5,"div",31),i.Bc(6," This is an example card. "),i.Pb(),i.Pb(),i.Pb(),i.Pb()),2&e){const e=t.item;i.zb(3),i.Dc(" ",e," ")}}let h=(()=>{class e extends r.a{constructor(){super("pager"),this.dotPagerHtmlExample='\n<div class="card" *ngFor="let item of pagedItems">\n    <div class="card-header">\n        {{item}}\n    </div>\n    <div class="card-block">\n        <div class="card-text">\n            This is an example card.\n        </div>\n    </div>\n</div>\n\n<clr-dot-pager  [clrPages]="pages"\n                [clrCurrentPage]="currentPage"\n                (clrCurrentPageChange)="onPageChanged($event)">\n</clr-dot-pager>\n',this.genericPagerHtmlExample='\n<div class="clr-row" *ngFor="let item of pagedItems">\n    <div class="clr-col-lg-6 clr-col-md-8 clr-col-12">\n        <div class="card">\n            <div class="card-header">\n                {{item}}\n            </div>\n            <div class="card-block">\n                <div class="card-text">\n                    This is an example card.\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class="margin-top-24">\n    <clr-pager [clrPage]="currentPage"\n               [clrPageSize]="pageSize"\n               [clrTotalItems]="totalItems"\n               (clrPageChange)="onPageChanged($event)"></clr-pager>\n</div>\n',this.pagedSearchHtmlExample='\n<clr-paged-search-result-list [clrItems]="pagedItems"\n                              [clrPage]="currentPage"\n                              [clrPageSize]="pageSize"\n                              [clrTotalItems]="allItems.length"\n                              (clrPageChange)="onPageChanged($event)">\n    <ng-template let-item="item">\n        <div class="col-xs-12">\n            <div class="card">\n                <div class="card-header">\n                    {{item}}\n                </div>\n                <div class="card-block">\n                    <div class="card-text">\n                        This is an example card.\n                    </div>\n                </div>\n            </div>\n        </div>\n    </ng-template>\n</clr-paged-search-result-list>\n',this.allItems=[],this.pagedItems=[],this.totalItems=30,this.pageSize=3,this.currentPage=1,this.pages=10}onPageChanged(e){this.currentPage=e;const t=(e-1)*this.pageSize,a=Math.min(t+this.pageSize-1,this.allItems.length-1);setTimeout(()=>this.pagedItems=this.allItems.slice(t,a+1),0)}createItems(){this.allItems=[];for(let e=0;e<this.totalItems;e++)this.allItems[e]="Card "+(e+1);this.pages=Math.ceil(this.totalItems/this.pageSize),this.onPageChanged(this.currentPage>this.pages?this.pages:this.currentPage)}ngOnInit(){this.createItems()}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=i.Eb({type:e,selectors:[["clr-pager-demo"]],hostVars:4,hostBindings:function(e,t){2&e&&i.Cb("content-area",!0)("dox-content-panel",!0)},features:[i.wb],decls:234,vars:19,consts:[[3,"title"],["id","dot-pager-header",1,"component-summary"],["id","design-guidelines"],[1,"list"],["id","code-examples"],["id","examples"],[1,"clr-code"],["id","demo"],["clrForm","","clrLayout","horizontal"],["for","totalItems"],["clrInput","","type","number","id","totalItems","min","0","name","totalItems",1,"clr-col-1",3,"ngModel","ngModelChange"],["for","pageSize"],["clrInput","","type","number","id","pageSize","min","0","name","pageSize",1,"clr-col-1",3,"ngModel","ngModelChange"],["class","card",4,"ngFor","ngForOf"],[3,"clrPages","clrCurrentPage","clrCurrentPageChange"],[3,"clrCode"],["id","generic-pager-header",1,"component-summary"],["class","clr-row",4,"ngFor","ngForOf"],[1,"margin-top-24"],[3,"clrPage","clrPageSize","clrTotalItems","clrPageChange"],["id","search-result-list-header",1,"component-summary"],["id","usage"],[1,"table"],[1,"left"],[1,"left","clr-hidden-xs-down"],[1,"clr-hidden-xs-down"],[1,"clr-hidden-sm-up"],[3,"clrItems","clrPage","clrPageSize","clrTotalItems","clrPageChange"],[1,"card"],[1,"card-header"],[1,"card-block"],[1,"card-text"],[1,"clr-row"],[1,"clr-col-lg-6","clr-col-md-8","clr-col-12"],[1,"col-xs-12"]],template:function(e,t){1&e&&(i.Qb(0,"clr-doc-wrapper",0),i.Qb(1,"article"),i.Qb(2,"h2"),i.Bc(3,"Dot Pager"),i.Pb(),i.Qb(4,"h5",1),i.Bc(5,"The Dot-Pager is a basic component that can be used to show a simple pagination bar."),i.Pb(),i.Qb(6,"div",2),i.Qb(7,"h3"),i.Bc(8,"Usage"),i.Pb(),i.Qb(9,"ul",3),i.Qb(10,"li"),i.Bc(11," Use the Dot-Pager component whenever you have to show data over multiple pages, e.g. a list of Cards. "),i.Pb(),i.Qb(12,"li"),i.Bc(13," Do not use the Dot-Pager component when you are showing your data in a clr-datagrid, instead use the existing clr-dg-pagination component. "),i.Pb(),i.Pb(),i.Pb(),i.Qb(14,"div",4),i.Qb(15,"h3",5),i.Bc(16,"Code & Examples"),i.Pb(),i.Qb(17,"p"),i.Bc(18," Following interactions are available: "),i.Pb(),i.Qb(19,"ul"),i.Qb(20,"li"),i.Bc(21," To define the pages add a "),i.Qb(22,"code",6),i.Bc(23,"[clrPages]"),i.Pb(),i.Bc(24," input to the component. "),i.Pb(),i.Qb(25,"li"),i.Bc(26," To define the current page add a "),i.Qb(27,"code",6),i.Bc(28,"[clrCurrentPage]"),i.Pb(),i.Bc(29," input to the component. "),i.Pb(),i.Qb(30,"li"),i.Bc(31," To react to page changes, bind to the event "),i.Qb(32,"code",6),i.Bc(33,"(clrCurrentPageChange)"),i.Pb(),i.Bc(34,". "),i.Pb(),i.Pb(),i.Qb(35,"h3",7),i.Bc(36,"Demo"),i.Pb(),i.Qb(37,"form",8),i.Qb(38,"clr-input-container"),i.Qb(39,"label",9),i.Bc(40,"Total Items"),i.Pb(),i.Qb(41,"input",10),i.Xb("ngModelChange",function(e){return t.totalItems=e})("ngModelChange",function(){return t.createItems()}),i.Pb(),i.Pb(),i.Qb(42,"clr-input-container"),i.Qb(43,"label",11),i.Bc(44,"Page Size"),i.Pb(),i.Qb(45,"input",12),i.Xb("ngModelChange",function(e){return t.pageSize=e})("ngModelChange",function(){return t.createItems()}),i.Pb(),i.Pb(),i.Pb(),i.zc(46,s,6,1,"div",13),i.Qb(47,"clr-dot-pager",14),i.Xb("clrCurrentPageChange",function(e){return t.onPageChanged(e)}),i.Pb(),i.Lb(48,"clr-code-snippet",15),i.Pb(),i.Qb(49,"h2"),i.Bc(50,"Generic Pager"),i.Pb(),i.Qb(51,"h5",16),i.Bc(52,"The Generic Pager is a basic component that can be used to show a simple pagination bar."),i.Pb(),i.Qb(53,"div",2),i.Qb(54,"h3"),i.Bc(55,"Usage"),i.Pb(),i.Qb(56,"ul",3),i.Qb(57,"li"),i.Bc(58," Use the Generic Pager component whenever you have to show data over multiple pages, e.g. a list of Cards. "),i.Pb(),i.Qb(59,"li"),i.Bc(60," Do not use the Generic Pager component when you are showing your data in a clr-datagrid, instead use the existing clr-dg-pagination component. "),i.Pb(),i.Pb(),i.Pb(),i.Qb(61,"div",4),i.Qb(62,"h3",5),i.Bc(63,"Code & Examples"),i.Pb(),i.Qb(64,"p"),i.Bc(65," Following interactions are available: "),i.Pb(),i.Qb(66,"ul"),i.Qb(67,"li"),i.Bc(68," To define the page size add a "),i.Qb(69,"code",6),i.Bc(70,"[clrPageSize]"),i.Pb(),i.Bc(71," input to the component. "),i.Pb(),i.Qb(72,"li"),i.Bc(73," To define the number of total items add a "),i.Qb(74,"code",6),i.Bc(75,"[clrTotalItems]"),i.Pb(),i.Bc(76," input to the component. "),i.Pb(),i.Qb(77,"li"),i.Bc(78," To react to page changes, bind to the event "),i.Qb(79,"code",6),i.Bc(80,"(clrPageChange)"),i.Pb(),i.Bc(81,". "),i.Pb(),i.Qb(82,"li"),i.Bc(83," Optionally you can set the current page by adding a "),i.Qb(84,"code",6),i.Bc(85,"[clrPage]"),i.Pb(),i.Bc(86," input to the component. "),i.Pb(),i.Pb(),i.Qb(87,"h3",7),i.Bc(88,"Demo"),i.Pb(),i.Qb(89,"form",8),i.Qb(90,"clr-input-container"),i.Qb(91,"label",9),i.Bc(92,"Total Items"),i.Pb(),i.Qb(93,"input",10),i.Xb("ngModelChange",function(e){return t.totalItems=e})("ngModelChange",function(){return t.createItems()}),i.Pb(),i.Pb(),i.Qb(94,"clr-input-container"),i.Qb(95,"label",11),i.Bc(96,"Page Size"),i.Pb(),i.Qb(97,"input",12),i.Xb("ngModelChange",function(e){return t.pageSize=e})("ngModelChange",function(){return t.createItems()}),i.Pb(),i.Pb(),i.Pb(),i.zc(98,g,8,1,"div",17),i.Qb(99,"div",18),i.Qb(100,"clr-pager",19),i.Xb("clrPageChange",function(e){return t.onPageChanged(e)}),i.Pb(),i.Pb(),i.Lb(101,"clr-code-snippet",15),i.Pb(),i.Qb(102,"h2"),i.Bc(103,"Paged Search Result List"),i.Pb(),i.Qb(104,"h5",20),i.Bc(105,"The Paged Search Result List component is a basic component used to display a list of generic data including a pager above and below the list."),i.Pb(),i.Qb(106,"div",2),i.Qb(107,"h3"),i.Bc(108,"Style"),i.Pb(),i.Qb(109,"p"),i.Bc(110,"You can style the list any way you want - this component allows you to use a custom template to show all items of your list. The custom template can range from a single line representing text to one or more completely new angular components."),i.Pb(),i.Pb(),i.Qb(111,"h3",21),i.Bc(112,"Usage"),i.Pb(),i.Qb(113,"p"),i.Bc(114,"To set a template for each item of your list simply add a "),i.Qb(115,"code",6),i.Bc(116,"ng-template"),i.Pb(),i.Bc(117," inside the "),i.Qb(118,"code",6),i.Bc(119,"clr-paged-search-result-list"),i.Pb(),i.Bc(120,". By defining "),i.Qb(121,"code",6),i.Bc(122,'let-item="item"'),i.Pb(),i.Bc(123," on your "),i.Qb(124,"code",6),i.Bc(125,"ng-template"),i.Pb(),i.Bc(126," you can get the context of each individual item."),i.Pb(),i.Qb(127,"h2"),i.Bc(128,"Angular Component"),i.Pb(),i.Qb(129,"h3"),i.Bc(130,"Summary of Options"),i.Pb(),i.Qb(131,"table",22),i.Qb(132,"thead"),i.Qb(133,"tr"),i.Qb(134,"th",23),i.Bc(135,"Input/Output"),i.Pb(),i.Qb(136,"th",24),i.Bc(137,"Values"),i.Pb(),i.Qb(138,"th",25),i.Bc(139,"Default"),i.Pb(),i.Qb(140,"th",23),i.Bc(141,"Effect"),i.Pb(),i.Pb(),i.Pb(),i.Qb(142,"tbody"),i.Qb(143,"tr"),i.Qb(144,"td",23),i.Qb(145,"b"),i.Bc(146,"[clrItems]"),i.Pb(),i.Qb(147,"div",26),i.Bc(148,"Type: Array"),i.Pb(),i.Qb(149,"div",26),i.Bc(150,"Default: undefined"),i.Pb(),i.Pb(),i.Qb(151,"td",24),i.Bc(152,"Array"),i.Pb(),i.Qb(153,"td",25),i.Bc(154,"undefined"),i.Pb(),i.Qb(155,"td",23),i.Bc(156,"Sets the items of the current page"),i.Pb(),i.Pb(),i.Qb(157,"tr"),i.Qb(158,"td",23),i.Qb(159,"b"),i.Bc(160,"[clrPage]"),i.Pb(),i.Qb(161,"div",26),i.Bc(162,"Type: Number"),i.Pb(),i.Qb(163,"div",26),i.Bc(164,"Default: undefined"),i.Pb(),i.Pb(),i.Qb(165,"td",24),i.Bc(166,"Number"),i.Pb(),i.Qb(167,"td",25),i.Bc(168,"undefined"),i.Pb(),i.Qb(169,"td",23),i.Bc(170," Sets the current page "),i.Pb(),i.Pb(),i.Qb(171,"tr"),i.Qb(172,"td",23),i.Qb(173,"b"),i.Bc(174,"[clrPageSize]"),i.Pb(),i.Qb(175,"div",26),i.Bc(176,"Type: Number"),i.Pb(),i.Qb(177,"div",26),i.Bc(178,"Default: undefined"),i.Pb(),i.Pb(),i.Qb(179,"td",24),i.Bc(180,"Number"),i.Pb(),i.Qb(181,"td",25),i.Bc(182,"undefined"),i.Pb(),i.Qb(183,"td",23),i.Bc(184," Sets the page size "),i.Pb(),i.Pb(),i.Qb(185,"tr"),i.Qb(186,"td",23),i.Qb(187,"b"),i.Bc(188,"[clrTotalItems]"),i.Pb(),i.Qb(189,"div",26),i.Bc(190,"Type: Number"),i.Pb(),i.Qb(191,"div",26),i.Bc(192,"Default: undefined"),i.Pb(),i.Pb(),i.Qb(193,"td",24),i.Bc(194,"Number"),i.Pb(),i.Qb(195,"td",25),i.Bc(196,"undefined"),i.Pb(),i.Qb(197,"td",23),i.Bc(198," Necessary to calculate the number of pages. "),i.Pb(),i.Pb(),i.Qb(199,"tr"),i.Qb(200,"td",23),i.Qb(201,"b"),i.Bc(202,"[clrPagerPosition]"),i.Pb(),i.Qb(203,"div",26),i.Bc(204,"Type: String"),i.Pb(),i.Qb(205,"div",26),i.Bc(206,"Default: 'bottom'"),i.Pb(),i.Pb(),i.Qb(207,"td",24),i.Bc(208,"'bottom', 'top', 'both'"),i.Pb(),i.Qb(209,"td",25),i.Bc(210,"'bottom'"),i.Pb(),i.Qb(211,"td",23),i.Bc(212," Defines where to show the generic pager. "),i.Pb(),i.Pb(),i.Qb(213,"tr"),i.Qb(214,"td",23),i.Qb(215,"b"),i.Bc(216,"(clrPageChange)"),i.Pb(),i.Qb(217,"div",26),i.Bc(218,"Type: Function"),i.Pb(),i.Qb(219,"div",26),i.Bc(220,"N/A"),i.Pb(),i.Pb(),i.Qb(221,"td",24),i.Bc(222,"Function"),i.Pb(),i.Qb(223,"td",25),i.Bc(224,"N/A"),i.Pb(),i.Qb(225,"td",23),i.Bc(226," Fired every time the page changes "),i.Pb(),i.Pb(),i.Pb(),i.Pb(),i.Qb(227,"div",4),i.Qb(228,"h3",5),i.Bc(229,"Code & Examples"),i.Pb(),i.Qb(230,"div",18),i.Qb(231,"clr-paged-search-result-list",27),i.Xb("clrPageChange",function(e){return t.onPageChanged(e)}),i.zc(232,P,7,1,"ng-template"),i.Pb(),i.Pb(),i.Lb(233,"clr-code-snippet",15),i.Pb(),i.Pb(),i.Pb()),2&e&&(i.hc("title",t.title),i.zb(41),i.hc("ngModel",t.totalItems),i.zb(4),i.hc("ngModel",t.pageSize),i.zb(1),i.hc("ngForOf",t.pagedItems),i.zb(1),i.hc("clrPages",t.pages)("clrCurrentPage",t.currentPage),i.zb(1),i.hc("clrCode",t.dotPagerHtmlExample),i.zb(45),i.hc("ngModel",t.totalItems),i.zb(4),i.hc("ngModel",t.pageSize),i.zb(1),i.hc("ngForOf",t.pagedItems),i.zb(2),i.hc("clrPage",t.currentPage)("clrPageSize",t.pageSize)("clrTotalItems",t.totalItems),i.zb(1),i.hc("clrCode",t.genericPagerHtmlExample),i.zb(130),i.hc("clrItems",t.pagedItems)("clrPage",t.currentPage)("clrPageSize",t.pageSize)("clrTotalItems",t.allItems.length),i.zb(2),i.hc("clrCode",t.pagedSearchHtmlExample))},directives:[l.a,n.A,n.o,n.p,b.y,b.H,b.F,b.G,o.V,n.t,n.b,b.E,n.n,n.q,c.p,o.n,d.a,o.F,o.E],encapsulation:2}),e})();var p=a("JsA7"),m=a("tyNb"),u=a("XPsC");let Q=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=i.Ib({type:e}),e.\u0275inj=i.Hb({imports:[[c.c,n.h,b.a,u.a,p.a,m.g.forChild([{path:"",component:h}]),o.b]]}),e})()}}]);